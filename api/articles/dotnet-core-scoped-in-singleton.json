{"title":".Net Core Dependency Injection Scoped 注入到 Singleton","uid":"98c01dec7a830e04805e721a8c540f17","slug":"dotnet-core-scoped-in-singleton","date":"2021-06-16T16:00:00.000Z","updated":"2022-08-19T01:08:59.331Z","comments":true,"path":"api/articles/dotnet-core-scoped-in-singleton.json","keywords":null,"cover":null,"content":"<h3 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h3><ul>\n<li>.Net Core 3.1</li>\n</ul>\n<hr>\n<h3 id=\"問題\"><a href=\"#問題\" class=\"headerlink\" title=\"問題\"></a>問題</h3><p>踩雷．</p>\n<p>在專案中如果想對 Singleton 的 Service 中直接注入 Scoped 的 Service 的話，會拋出 Exception </p>\n<p>下面範例取自黑暗執行緒</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">System<span class=\"token punctuation\">.</span>AggregateException<span class=\"token punctuation\">:</span> 'Some services are <span class=\"token keyword\">not</span> able to <span class=\"token return-type class-name\">be</span> constructed <span class=\"token punctuation\">(</span>Error <span class=\"token keyword\">while</span> validating the service descriptor 'ServiceType<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Microsoft<span class=\"token punctuation\">.</span>Extensions<span class=\"token punctuation\">.</span>Hosting<span class=\"token punctuation\">.</span>IHostedService</span> Lifetime<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Singleton</span> ImplementationType<span class=\"token punctuation\">:</span> CRUDExample<span class=\"token punctuation\">.</span>Models<span class=\"token punctuation\">.</span>MemoryUsageMonitor'<span class=\"token punctuation\">:</span> Cannot consume scoped service 'CRUDExample<span class=\"token punctuation\">.</span>Models<span class=\"token punctuation\">.</span>JournalDbContext' <span class=\"token keyword\">from</span> singleton 'Microsoft<span class=\"token punctuation\">.</span>Extensions<span class=\"token punctuation\">.</span>Hosting<span class=\"token punctuation\">.</span>IHostedService'<span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>原因是因為是在 Scoped 的生命週期結束後（一次 Request）， Singleton 依然會存在，這並不符合設計的規範．</p>\n<h3 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>如果要解決這問題，可以在 Singleton Service 定義一個 Scope，透過在 Singleton 的 service provider ，再透過該 service provider 來提供 Scope 的區間，明確定義出 Scope 的範圍，這樣就可以迴避掉 exception．</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">// 先注入 IServiceProvider 到你的 class</span>\n<span class=\"token keyword\">public</span> <span class=\"token function\">YourClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IServiceProvider</span> serviceProvider<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    _serviceProvider <span class=\"token operator\">=</span> serviceProvider<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 生成 Scope</span>\n<span class=\"token keyword\">using</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> s <span class=\"token operator\">=</span> _serviceProvider<span class=\"token punctuation\">.</span><span class=\"token function\">CreateScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    s<span class=\"token punctuation\">.</span>ServiceProvider<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetService</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ICustomService<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"參考資料：\"><a href=\"#參考資料：\" class=\"headerlink\" title=\"參考資料：\"></a>參考資料：</h3><p><a href=\"https://stackoverflow.com/questions/55708488/using-a-scoped-service-in-a-singleton-in-an-asp-net-core-app\">https://stackoverflow.com/questions/55708488/using-a-scoped-service-in-a-singleton-in-an-asp-net-core-app</a></p>\n<p><a href=\"https://blog.darkthread.net/blog/aspnetcore-use-scoped-in-singleton/\">https://blog.darkthread.net/blog/aspnetcore-use-scoped-in-singleton/</a></p>\n","text":"環境 .Net Core 3.1 問題踩雷． 在專案中如果想對 Singleton 的 Service 中直接注入 Scoped 的 Service 的話，會拋出 Exception 下面範例取自黑暗執行緒 System.AggregateException: 'Some ser...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"程式開發","slug":"程式開發","count":5,"path":"api/categories/程式開發.json"}],"tags":[{"name":".Net Core","slug":"Net-Core","count":1,"path":"api/tags/Net-Core.json"},{"name":"Dependency Injection","slug":"Dependency-Injection","count":1,"path":"api/tags/Dependency-Injection.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%92%B0%E5%A2%83\"><span class=\"toc-text\">環境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%95%8F%E9%A1%8C\"><span class=\"toc-text\">問題</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95\"><span class=\"toc-text\">解法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99%EF%BC%9A\"><span class=\"toc-text\">參考資料：</span></a></li></ol>","author":{"name":"MurabitoB","slug":"blog-author","avatar":"https://avatars1.githubusercontent.com/u/22661940?s=460&u=4cab0880b99fcb3784e73bc6550039106c2ba83e&v=4","link":"/","description":"後端軟體工程師<br>業餘Unity工程師<br>獨立遊戲開發","socials":{"github":"https://github.com/MurabitoB","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"linkedin":{"icon":"fab fa-linkedin","link":"https://www.linkedin.com/in/kai-sheng-liu-b209781b4/"}}}},"mapped":true,"prev_post":{"title":"Azure Function .Net Core 開發紀錄（一）","uid":"0208fe8c6452beee2ecaf0f83aa5c3da","slug":"azure-function-01","date":"2021-09-25T06:00:00.000Z","updated":"2022-08-19T01:08:59.331Z","comments":true,"path":"api/articles/azure-function-01.json","keywords":null,"cover":[],"text":"Azure Function .Net Core 開發紀錄（一） 如何進行 Dependency Injection前言在 Visual Studio 建立新的 Azure Function 的專案的時候，預設是不會有 Dependency Inejction 的相關設定，但是可...","link":"","photos":[],"count_time":{"symbolsCount":952,"symbolsTime":"1 mins."},"categories":[{"name":"程式開發","slug":"程式開發","count":5,"path":"api/categories/程式開發.json"}],"tags":[{"name":"Azure","slug":"Azure","count":2,"path":"api/tags/Azure.json"},{"name":"Azure Function","slug":"Azure-Function","count":2,"path":"api/tags/Azure-Function.json"}],"author":{"name":"MurabitoB","slug":"blog-author","avatar":"https://avatars1.githubusercontent.com/u/22661940?s=460&u=4cab0880b99fcb3784e73bc6550039106c2ba83e&v=4","link":"/","description":"後端軟體工程師<br>業餘Unity工程師<br>獨立遊戲開發","socials":{"github":"https://github.com/MurabitoB","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"linkedin":{"icon":"fab fa-linkedin","link":"https://www.linkedin.com/in/kai-sheng-liu-b209781b4/"}}}},"feature":true},"next_post":{}}