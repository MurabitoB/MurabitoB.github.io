[{"id":"5f1247cee4121beec31eab4f87c046c3","title":"開發工具清單","content":"個人常用開發工具及參考文章前言這裡主要條列一些常用開發的工具及 SDk 以便之後要換電腦的時候快速索引。\n版本控制\nGit\n\nIDE / 文字編輯器\nJetbrain - Rider\nVisual Studio Code\n\n容器化\nDocker\nkubectl\nk8sLens\n\n雲端\nAzure CLI\n\n遠端連線工具\nMobaXterm\nmRemoteNG\nTermius\n\nSDK\nNodeJS\n.NET Core\n\n截圖工具\nLightShot\n\n資料庫\nSQL Server Management Studio\n\nMac 專用\nhomebrew\nOh My Zsh 教學\n\n","slug":"toolkit","date":"2022-09-13T06:00:00.000Z","categories_index":"程式開發","tags_index":"開發工具","author_index":"MurabitoB"},{"id":"8dcfbec48199ae555ff114e052c8f13f","title":"Azure Function .Net Core 開發紀錄（二）","content":"Azure Function .Net Core 開發紀錄（二） 如何取得 config 變數前言在 .Net Core API 專案中，我們習慣透過 appsetting.json 來取得 config 的設定值，在 Azure function 中，需要透過專案根目錄裡面的 local.setting.json 的 Values 欄位來設定。\n&#123;\n    \"IsEncrypted\":false,\n    \"Values\":&#123;\n        \"AzureWebJobsStorage\":\"UseDevelopmentStorage=true\",\n        \"FUNCTIONS_WORKER_RUNTIME\":\"dotnet\",\n        // 從下面開始添加自己的設定\n    &#125;\n&#125;\n\n\n\n\n\n\n\n\n\n\n與 appsetting.json 不同， Values 裡面的變數不能再包成 json ，而是只能以 Key Value 的形式存在。\n如果需要以物件形式存在，則必須填寫成 “&lt;物件名稱&gt;:&lt;變數名稱&gt;”:”變數值” 的形式。\n&#123;\n    \"IsEncrypted\":false,\n    \"Values\":&#123;\n        \"AzureWebJobsStorage\":\"UseDevelopmentStorage=true\",\n        \"FUNCTIONS_WORKER_RUNTIME\":\"dotnet\",\n        // 自訂變數\n        \"UserInfo:Name\":\"MurabitoB\"\n    &#125;\n&#125;\n在程式端取得環境變數在程式端可以透過下列的方法取得 config 的值\n\nSystem.Environment.GetEnvironmentVariable\n透過 Dependency Inejction + IOption Pattern 來取得環境變數\n\n在這篇文章我只打算介紹第二種方法，因為使用強型別的物件相對於前者要來的可靠的多。\n\n\n\n\n\n\n\n\n\nDI 的設定可以參考 上篇文章\n\n設定要綁定的 Model\npublic class UserInfo\n&#123;\n    public string Name &#123; get; set; &#125;\n&#125;               \n\n\n在 IFunctionsHostBuilder 裡面設定 IOptionPattern\npublic override void Configure(IFunctionsHostBuilder builder)\n&#123;\n    builder.Services.AddOptions&lt;UserInfo>()\n                    .Configure&lt;IConfiguration>((settings, configuration)=>\n                    &#123;\n                        configufration.GetSection(\"UserInfo\").Bind(settings)\n                    &#125;);\n&#125;\n\n接著再透過 DI 取得 IOption 物件\npublic UserService\n&#123;\n    public UserService(IOptions&lt;UserInfo> userInfo)\n    &#123;\n        var name = userInfo.Value.Name; // MurabitoB\n    &#125;\n&#125;\n\n","slug":"azure-function-02","date":"2021-09-25T08:00:00.000Z","categories_index":"程式開發","tags_index":"Azure,Azure Function","author_index":"MurabitoB"},{"id":"0208fe8c6452beee2ecaf0f83aa5c3da","title":"Azure Function .Net Core 開發紀錄（一）","content":"Azure Function .Net Core 開發紀錄（一） 如何進行 Dependency Injection前言在 Visual Studio 建立新的 Azure Function 的專案的時候，預設是不會有 Dependency Inejction 的相關設定，但是可以透過安裝 nuget 套件來進行設定。\n安裝套件安裝 Microosft.Azure.Functions.Extensions 套件\n設定 Startup與 .net core API 專案的 Template 不同， Azure Function 的專案預設是不會建立 Startup ，所以需要自行建立入口的 class。\n// Startup.cs\nusing Microsoft.Azure.Functions.Extensions.DependencyInjection;\nusing Microsoft.Extensions.DependencyInjection;\n\n[assembly: FunctionsStartup(typeof(MyNamespace.Startup))]\n\nnamespace MyNamespace\n&#123;\n    public class Startup : FunctionsStartup\n    &#123;\n        public override void Configure(IFunctionsHostBuilder builder)\n        &#123;\n            builder.Services.AddSingleton&lt;ILoggerProvider, MyLoggerProvider>();\n        &#125;\n    &#125;\n&#125;\n\n注意事項Azure Function 預設的 template 提供的 function 會掛 static 修飾詞，要記得拔掉，否則無法取得 DI 的物件。\n參考https://docs.microsoft.com/zh-tw/azure/azure-functions/functions-dotnet-dependency-injection\n","slug":"azure-function-01","date":"2021-09-25T06:00:00.000Z","categories_index":"程式開發","tags_index":"Azure,Azure Function","author_index":"MurabitoB"},{"id":"98c01dec7a830e04805e721a8c540f17","title":".Net Core Dependency Injection Scoped 注入到 Singleton","content":"環境\n.Net Core 3.1\n\n\n問題踩雷．\n在專案中如果想對 Singleton 的 Service 中直接注入 Scoped 的 Service 的話，會拋出 Exception \n下面範例取自黑暗執行緒\nSystem.AggregateException: 'Some services are not able to be constructed (Error while validating the service descriptor 'ServiceType: Microsoft.Extensions.Hosting.IHostedService Lifetime: Singleton ImplementationType: CRUDExample.Models.MemoryUsageMonitor': Cannot consume scoped service 'CRUDExample.Models.JournalDbContext' from singleton 'Microsoft.Extensions.Hosting.IHostedService'.)'\n\n原因是因為是在 Scoped 的生命週期結束後（一次 Request）， Singleton 依然會存在，這並不符合設計的規範．\n解法如果要解決這問題，可以在 Singleton Service 定義一個 Scope，透過在 Singleton 的 service provider ，再透過該 service provider 來提供 Scope 的區間，明確定義出 Scope 的範圍，這樣就可以迴避掉 exception．\n// 先注入 IServiceProvider 到你的 class\npublic YourClass(IServiceProvider serviceProvider)\n&#123;\n    _serviceProvider = serviceProvider;\n&#125;\n\n// 生成 Scope\nusing(var s = _serviceProvider.CreateScope())\n&#123;\n    s.ServiceProvider.GetService&lt;ICustomService>();\n&#125;\n\n參考資料：https://stackoverflow.com/questions/55708488/using-a-scoped-service-in-a-singleton-in-an-asp-net-core-app\nhttps://blog.darkthread.net/blog/aspnetcore-use-scoped-in-singleton/\n","slug":"dotnet-core-scoped-in-singleton","date":"2021-06-16T16:00:00.000Z","categories_index":"程式開發","tags_index":".Net Core,Dependency Injection","author_index":"MurabitoB"},{"id":"4b75f77a6376da79907037a67ad42fb0","title":"Entity Framework Identity 插入資料時自動獲得id","content":"EntityFramework Identity 插入資料時自動獲得id環境\nVisual Studio 2019\n.Net Framework : 4.7.2\nEntity Framework : 6.4.4\nMySql.Data.EntityFramework: 8.0.18\nDB : MariadDB\n\n\n問題在專案上有需要MariadDB的Table做資料維護，而Database是甲方爸爸開的，所以是必須以Database First的模式開發。\n甲方爸爸的欄位皆以int做主鍵id並以auto increment做欄位的自動增值。  \n資料維護需要以Ajax的方式在新增之後馬上顯示在前端的頁面中，被新增的資料有可能在同頁面中馬上被刪除，因此需要新增資料後要馬上取得該欄位的id並回傳給前端。  \n此外在插入資料的時候，並沒有直接指定值，而是由資料庫自動產生對應的id，這就造成了無法知道生成的資料的id。\n解法Entity Framework會依照映射的模型有沒有identity欄位來決定新增後會不會自動取值回來。\n可以透過Entity Framework的Log的Action去指定輸出生成的SQL語法用的method來觀察轉換出來的SQL語法\ncontext.Database.Log &#x3D; Console.WriteLine;\n在INSERT後端包含了SELECT的語法，並且由於對應的資料庫是MariadDB，所以輸出的SQL CODE中用到了MySQL的 last_insert_id()的函式，如果環境是對應到Sql Server，那生成的sql code會變成 scope_identity()。\nSELECT\n&#96;sid&#96;\nFROM &#96;target_data&#96;\nWHERE  row_count() &gt; 0 AND &#96;sid&#96;&#x3D; last_insert_id()\n\n\n\n參考資料：https://blog.csdn.net/wangzl1163/article/details/52037714https://dotblogs.com.tw/yc421206/2020/06/27/ef_insert_after_query_identity_field\n","slug":"Entityframework-Identity","date":"2020-11-23T16:00:00.000Z","categories_index":"程式開發","tags_index":".Net Framewrok","author_index":"MurabitoB"}]